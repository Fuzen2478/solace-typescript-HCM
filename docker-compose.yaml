services:
  # 1. Neo4j Database
  neo4j:
    image: neo4j:5-community
    container_name: hcm-neo4j
    ports:
      - '7474:7474'
      - '7687:7687'
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_server_memory_heap_initial__size=256m
      - NEO4J_server_memory_heap_max__size=512m
      - NEO4J_server_memory_pagecache_size=256m
      - NEO4J_server_config_strict__validation_enabled=false
      - NEO4J_server_default__listen__address=0.0.0.0
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s
    networks:
      - hcm-network

  # 2. Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hcm-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 6
      start_period: 10s
    networks:
      - hcm-network

  # 3. HR Resource Service
  hr-resource:
    build:
      context: .
      dockerfile: Dockerfile
      target: hr-resource
    container_name: hcm-hr-resource
    ports:
      - '3001:3001'
      - '3011:3011'
    environment:
      - NODE_ENV=production
      - HR_SERVICE_PORT=3001
      - WS_PORT=3011
      - MOCK_LDAP_ENABLED=true
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3001/health || exit 1']
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 45s
    restart: unless-stopped
    networks:
      - hcm-network

  # 4. Matching Engine
  matching-engine:
    build:
      context: .
      dockerfile: Dockerfile
      target: matching-engine
    container_name: hcm-matching-engine
    ports:
      - '3002:3002'
      - '3012:3012'
    environment:
      - NODE_ENV=production
      - MATCHING_ENGINE_PORT=3002
      - MATCHING_WS_PORT=3012
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3002/health || exit 1']
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 45s
    restart: unless-stopped
    networks:
      - hcm-network

  # 5. API Gateway (수정된 depends_on 조건)
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: api-gateway
    container_name: hcm-api-gateway
    ports:
      - '3000:3000'
      - '3010:3010'
    environment:
      - NODE_ENV=production
      - API_GATEWAY_PORT=3000
      - GATEWAY_WS_PORT=3010
      - HR_SERVICE_URL=http://hr-resource:3001
      - MATCHING_ENGINE_URL=http://matching-engine:3002
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
    depends_on:
      hr-resource:
        condition: service_started  # service_healthy 대신 service_started 사용
      matching-engine:
        condition: service_started  # service_healthy 대신 service_started 사용
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3000/health || exit 1']
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - hcm-network

  # 6. Portainer
  portainer:
    image: portainer/portainer-ce:latest
    container_name: hcm-portainer
    ports:
      - '9000:9000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: unless-stopped
    networks:
      - hcm-network

volumes:
  neo4j_data:
    name: hcm_neo4j_data
  redis_data:
    name: hcm_redis_data
  portainer_data:
    name: hcm_portainer_data

networks:
  hcm-network:
    name: hcm-network
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24