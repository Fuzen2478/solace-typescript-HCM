{
  "name": "solace-typescript-hcm",
  "version": "1.0.0",
  "private": true,
  "description": "Human Capital Management based Distributed System",
  "workspaces": [
    "services/*"
  ],
  "scripts": {
    "dev": "nodemon --exec ts-node src/index.ts",
    "dev:gateway": "nodemon --exec \"npx ts-node --transpile-only\" src/services/api-gateway/index.ts",
    "dev:hr": "nodemon --exec \"npx ts-node --transpile-only\" src/services/hr-resource/index.ts",
    "dev:matching": "nodemon --exec \"npx ts-node --transpile-only\" src/services/matching-engine/index.ts",
    "dev:verification": "nodemon --exec \"npx ts-node --transpile-only\" src/services/verification/index.ts",
    "dev:edge": "nodemon --exec \"npx ts-node --transpile-only\" src/services/edge-agent/index.ts",
    
    "dev:ldap": "ts-node development/mock-ldap-server.ts",
    "dev:all": "concurrently \"pnpm dev:gateway\" \"pnpm dev:hr\" \"pnpm dev:matching\" \"pnpm dev:verification\" \"pnpm dev:edge\"",
    
    "docker:quick": "node docker-quick-start.js",
    "docker:infra": "docker-compose up -d neo4j redis portainer",
    "docker:services": "docker-compose up -d --build hr-resource matching-engine verification edge-agent api-gateway",
    "docker:status": "docker-compose ps",
    "docker:logs:all": "docker-compose logs -f",
    "docker:health": "curl -s http://localhost:3000/health && curl -s http://localhost:3001/health && curl -s http://localhost:3002/health && curl -s http://localhost:3005/health && curl -s http://localhost:3004/health",
    
    "docker:dev": "docker-compose up -d --build",
    "docker:dev:infra": "docker-compose up -d redis neo4j postgres openldap solace portainer redis-commander ldap-admin",
    "docker:dev:apps": "docker-compose up -d --build api-gateway hr-resource matching-engine verification edge-agent ldap-server",
    "docker:dev:all": "docker-compose up -d --build",
    "docker:dev:minimal": "docker-compose up -d redis neo4j postgres",
    "docker:dev:testing": "docker-compose --profile testing up -d --build",
    
    "env:local": "cp .env.local .env || echo 'No .env.local found'",
    "env:docker": "cp .env.docker .env",
    "env:production": "cp .env.production .env || echo 'No .env.production found'",
    
    "infra:start": "docker-compose up -d redis neo4j postgres portainer",
    "infra:stop": "docker-compose stop redis neo4j postgres portainer",
    "infra:logs": "docker-compose logs -f redis neo4j postgres",
    
    "setup": "pnpm infra:start && pnpm wait-for-services",
    "wait-for-services": "node scripts/wait-for-services.js",
    "health-check": "powershell -ExecutionPolicy Bypass -File scripts/health-check.ps1",
    "health-check:bash": "bash scripts/health-check.sh",
    "test:docker": "powershell -ExecutionPolicy Bypass -File scripts/test-docker-environment.ps1",
    "test:docker:quick": "powershell -ExecutionPolicy Bypass -File scripts/test-docker-environment.ps1 -TestType quick",
    "validate:docker": "powershell -ExecutionPolicy Bypass -File scripts/validate-docker-config.ps1",
    "verify:services": "powershell -ExecutionPolicy Bypass -File scripts/verify-services.ps1",
    "verify:functional": "powershell -ExecutionPolicy Bypass -File scripts/test-functional.ps1",
    "analyze:logs": "powershell -ExecutionPolicy Bypass -File scripts/analyze-logs.ps1",
    "verify:complete": "powershell -ExecutionPolicy Bypass -File scripts/verify-complete-system.ps1",
    "verify:quick": "powershell -ExecutionPolicy Bypass -File scripts/verify-complete-system.ps1 -TestLevel minimal",
    "verify:full": "powershell -ExecutionPolicy Bypass -File scripts/verify-complete-system.ps1 -TestLevel comprehensive -GenerateReport",
    
    "build": "tsc",
    "build:docker": "tsc --noEmit false --skipLibCheck true --noImplicitAny false",
    "start": "node dist/index.js",
    "test": "jest",
    "test:integration": "jest tests/integration --testTimeout=60000",
    "test:integration:manual": "node tests/integration-test.js",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "demo": "ts-node tests/scenarios/demo.ts",
    "demo:verbose": "ts-node tests/scenarios/demo.ts --verbose",
    
    "logs:hr": "tail -f hr-resource.log",
    "logs:ldap": "tail -f mock-ldap.log",
    "logs:all": "tail -f *.log",
    
    "clean": "rm -rf dist *.log data/*.db"
  },
  "dependencies": {
    "@types/node": "^22.15.3",
    "long": "^5.3.2",
    "solclientjs": "^10.13.0",
    "express": "^4.18.2",
    "ldapts": "^8.0.1",
    "neo4j-driver": "^5.17.0",
    "@automerge/automerge": "^2.2.9",
    "ws": "^8.16.0",
    "@grpc/grpc-js": "^1.10.0",
    "@grpc/proto-loader": "^0.7.10",
    "fabric-network": "^2.2.20",
    "fabric-ca-client": "^2.2.20",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "dotenv": "^16.4.1",
    "pg": "^8.11.3",
    "node-cron": "^3.0.3",
    "ioredis": "^5.4.1",
    "cors": "^2.8.5",
    "compression": "^1.7.4",
    "ldapjs": "^3.0.7",
    "concurrently": "^8.2.2",
    "axios": "^1.6.5",
    "express-rate-limit": "^7.1.5",
    "helmet": "^7.1.0",
    "bcrypt": "^5.1.1"
  },
  "devDependencies": {
    "@ianvs/prettier-plugin-sort-imports": "^4.4.1",
    "@types/express": "^4.17.21",
    "@types/ws": "^8.5.10",
    "@types/uuid": "^9.0.8",
    "@types/node-cron": "^3.0.11",
    "@types/pg": "^8.11.0",
    "@types/cors": "^2.8.17",
    "@types/compression": "^1.7.5",
    "@types/ldapjs": "^2.2.5",
    "@types/axios": "^0.14.0",
    "@types/bcrypt": "^5.0.2",
    "typescript": "^5.3.3",
    "nodemon": "^3.0.3",
    "ts-node": "^10.9.2",
    "@types/jest": "^29.5.11",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.2"
  }
}
